#include "H/Function_Init.H"

extern CLTIME;
extern OPTIME;
extern CPN;
extern NumberN;
extern star;
extern close;
extern open;
uint jb=0;	// 计闭合的时间变量
uint jk=0; // 计开的时间变量



void Timer_Init(void);
/*****************************************************
*函数名称：void Timer_Test(void);
*函数功能：T0/T1/T2测试
*入口参数：void
*出口参数：void
*****************************************************/
void Timer_Test(void)
{

}
/*****************************************************
*函数名称：void Timer_Init(void)
*函数功能：T0/T1/T2初始化
*入口参数：void
*出口参数：void
*****************************************************/
void Timer_Init(void)
{ 
    TMCON = 0X07;    //------111 ;Timer0、Tiemr1和Tiemr2选择时钟Fsys
	//T0设置
	TMOD |= 0x01;                 //0000 0001;Timer0设置工作方式1
	TL0 = (65536 - 16000)%256;    //溢出时间：时钟为Fsys，则16000*（1/Fsys）=1ms;  
	TH0 = (65536 - 16000)/256;
	ET0 = 1;//定时器0允许
	TR0 = 1;//打开定时器0
	//T1设置
	TMOD |= 0x20;            //0010 0000;Timer1设置工作方式2
	TL1 = 256 - 160;   //溢出时间：时钟为Fsys，则160*（1/Fsys）=10us;
	TH1 = 256 - 160;
	TR1 = 0;
	ET1 = 1;//定时器1允许
//	TR1 = 1;//打开定时器1
	//T2设置
	T2MOD = 0x00;
	T2CON = 0x00;	 //设置为16位重载寄存器
	RCAP2H = (65536-32000)/256;     //溢出时间：时钟为Fsys，则32000*（1/Fsys）=2ms;
	RCAP2L = (65536-32000)%256;
	TR2 = 0;
	ET2 = 1;//定时器2允许
	TR2 = 1;//打开定时器2		
	/*
	//Timer2捕获功能
	T2CON = 0X09; //使能EXT2，16位捕获模式
	T2MOD = 0X00;
	TH2 = 0X00;
	TL2 = 0X00;
	RCAP2H = 0X00;
	RCAP2L = 0X00;
	TR2 = 0;
	ET2 = 1;//定时器2允许
	TR2 = 1;//打开定时器2	
	*/
	
	EA = 1;	
}

/**************************************************
*函数名称：void timer0/1/2() interrupt 1/3/5
*函数功能：定时器中断产生方波
*入口参数：void
*出口参数：void
**************************************************/
void timer0() interrupt 1
{  
	uint k;
    TL0 = (65536 - 16000)%256;
	TH0 = (65536 - 16000)/256;
	k++;
	if(k==100)
    {
	   k=0;
	   if(star){
	  // if(NumberN){
	   	if(close){
				  OUT1=1;
			      jb++;
				  if(jb>CLTIME){
				                 open=1;
								 jb=0;
								 close=0;
							   }
		         }
		if(open){
				  OUT1=0;
				  jk++;
				  if(jk>=OPTIME){
				   				 open=0;
								 jk=0;
								 close=1;
				                }				  
		         }		
	   			//  }
	           }
			
    }

}

void timer1() interrupt 3
{

}

void Timer2Int(void) interrupt 5
{	
   	uchar i,j;	
	TF2 = 0;   //溢出清零
	i++;
	j++;
	if(i==80){i=0; KeyGet(); }
	if(j==60){j=0;KeyProcess();}	
}





